openapi: 3.0.0
info:
  title: User Management API
  description: API for managing user records, including fetching, creating, updating, and deleting users.
  version: 1.0.0
paths:
  /users:
    post:
      summary: Create a new user
      description: Creates a new user record.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{username}:
    get:
      summary: Get a user by username
      description: Retrieve user details by their username.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid username format or missing parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a user by username
      description: Deletes a user by their username.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update user information
      description: Updates specific fields of a user by their username.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Fields to update with their new values.
      responses:
        200:
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{username}/followers:
    get:
      summary: Gets followers of a username by their username
      description: Returns a list of user ids of the users that follow the given user
      parameters: 
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved the followers list
          content:
            application/json:
              schema:
                type: array
                items:
                  format: string
        400:
          description: Invalid username format or missing parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{username}/follows:
    get:
      summary: Retrieves a user's list of following
      description: Returns a list of user ids of the users that a given user follows.
      parameters: 
        - name: username
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successfully retrieved the following list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Invalid username format or missing parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found

  /users/{username}/followers/usernames:
    get:
      summary: Gets followers of a username by their username
      description: Returns a list of usernames of the users that follow the given user
      parameters: 
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved the followers list
          content:
            application/json:
              schema:
                type: array
                items:
                  format: string
        400:
          description: Invalid username format or missing parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{username}/follows:
    get:
      summary: Retrieves a user's list of following
      description: Returns a list of usernames of the users that a given user follows.
      parameters: 
        - name: username
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successfully retrieved the following list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Invalid username format or missing parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found

  /users/{username}/follow/{new_follow}:
    get:
      summary: Allows user to follow another user
      description: Creates a new following from a user to another user based on two usernames
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: new_follow
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: Successfully followed user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{username}/unfollow/{unfollow}:
    get:
      summary: Allows user to unfollow another user
      description: Deletes a current following from a user to another user based on two usernames
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: unfollow
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: Successfully unfollowed user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    User: # this references the User type in internal/types/types.gp
          # however, should be sent as a JSON, obv
      type: object
      properties:
        username:
          type: string
        bio:
          type: string
        links:
          type: array
          items:
            type: string
        created_on:
          type: string
          format: date-time
        picture:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
