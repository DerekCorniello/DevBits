openapi: 3.0.0
info:
  title: Project Management API
  description: API for managing project records, including fetching, creating, updating, and deleting projects.
  version: 1.0.0
paths:
  /projects:
    post:
      summary: Create a new project
      description: Creates a new project record.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        201:
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{project_id}:
    get:
      summary: Get a project by ID
      description: Retrieve project details by their ID.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Project found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          description: Invalid project ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a project by ID
      description: Deletes a project by its ID.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update project information
      description: Updates specific fields of a project by its ID.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Fields to update with their new values.
      responses:
        200:
          description: Project updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  project:
                    $ref: '#/components/schemas/Project'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{project_id}/followers:
    get:
      summary: Get the project's followers' ids
      description: Returns all of the user ids of the followers of the project specified 
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successfully retrieved list of ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  followers:
                    type: array
                    items:
                      type: string
        400:
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{project_id}/followers/usernames:
    get:
      summary: Get the project's followers' names
      description: Returns all of the usernames of the followers of the project specified 
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successfully retrieved list of usernames
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  followers:
                    type: array
                    items:
                      type: string
                    
        400:
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/follows/{username}/:
    get:
      summary: Get the ids of the projects a user is following
      description: Returns all of the project ids of the projects the user follows 
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved list of ids
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  followers:
                    type: array
                    items:
                      type: integer
                      format: int64
        400:
          description: Invalid username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Username not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/follows/{username}/names:
    get:
      summary: Get the names of the projects a user is following
      description: Returns all of the names of the projects the user follows
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved list of project names
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  followers:
                    type: array
                    items:
                      type: string
                    
        400:
          description: Invalid project ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{username}/follow/{project_id}:
    get:
      summary: Allows user to follow a project
      description: Creates a new following from a user to a project based on username and project id
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Successfully followed project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid username or project id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project or User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /projects/{username}/unfollow/{project_id}:
    get:
      summary: Allows user to unfollow a project
      description: Deletes a current following from a user to a project based on username and project id
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Successfully unfollowed project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Invalid username or project id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Project or User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          type: integer
          format: int64
          description: ID of the user who owns the project.
        name:
          type: string
        description:
          type: string
        status:
          type: integer
          format: int16
        likes:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        links:
          type: array
          items:
            type: string
        created_on:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
